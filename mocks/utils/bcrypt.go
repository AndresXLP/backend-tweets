// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Bcrypt is an autogenerated mock type for the Bcrypt type
type Bcrypt struct {
	mock.Mock
}

// HashPassword provides a mock function with given fields: password
func (_m *Bcrypt) HashPassword(password *string) {
	_m.Called(password)
}

// ValidatePassword provides a mock function with given fields: dbPassword, userPassword
func (_m *Bcrypt) ValidatePassword(dbPassword []byte, userPassword string) bool {
	ret := _m.Called(dbPassword, userPassword)

	var r0 bool
	if rf, ok := ret.Get(0).(func([]byte, string) bool); ok {
		r0 = rf(dbPassword, userPassword)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewBcrypt interface {
	mock.TestingT
	Cleanup(func())
}

// NewBcrypt creates a new instance of Bcrypt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBcrypt(t mockConstructorTestingTNewBcrypt) *Bcrypt {
	mock := &Bcrypt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
